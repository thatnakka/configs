#!/bin/bash

# Original --> https://github.com/ericoc/zabbix-slack-alertscript
# Slack incoming web-hook URL and user name
url='secret'
username='Zabbix-Bot'

## Values received by this script:
# To = $1 (Slack channel or user to send the message to, specified in the Zabbix web interface; "@username" or "#channel")
# Subject = $2 (usually either PROBLEM or OK)
# Message = $3 (whatever message the Zabbix action sends, preferably something like "Zabbix server is unreachable for 5 minutes - Zabbix server (127.0.0.1)")

# Get the Slack channel or user ($1) and Zabbix subject ($2 - hopefully either PROBLEM or RECOVERY)
to="$1"
subject="$2"

# Determine attachment color depending on the subject - danger (PROBLEM), good (OK), or warning (for everything else)

if [ "$subject" == 'PROBLEM' ]; then
	color='danger'
elif [ "$subject" == 'OK' ]; then
	color='good'
else
	color='warning'
fi

# The message that we want to send to Slack is the "subject" value ($2 / $subject - that we got earlier)
#  followed by the message that Zabbix actually sent us ($3)
#message='\"attachments\": [{\"color\": \"${color}\",\"fields\": [{\"title\": \"{$subject}\",\"value\": \"$3\",\"short\": false}]'

message="$3"

# Build our JSON payload and send it as a POST request to the Slack incoming web-hook URL
payload="{\"username\": \"$username\",\"channel\": \"$to\",\"attachments\": [{\"color\": \"$color\",\"fields\": [{\"title\": \"$subject\",\"value\": \"$message\",\"short\": false}]}]}"

#curl -m 5 --data-urlencode "${payload}" $url #-A 'zabbix-slack-alertscript / https://github.com/ericoc/zabbix-slack-alertscript'

curl -H "Content-type: application/json" -X POST -d "${payload}" $url
